---
haproxy:
  certs_path: /etc/haproxy/certs
  logs:
   - /dev/log  local0
   - /dev/log  local1 notice
  global:
    pidfile: /var/run/haproxy.pid
    chroot:  /var/lib/haproxy
    user: haproxy
    group: haproxy
    stats: socket /var/lib/haproxy/stats
    ssl-default-bind-options: "no-sslv3"
    ssl-default-bind-ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256K"
    ssl-default-server-options: "no-sslv3"
    ssl-default-server-ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256K"
  listen:
    stats:
      bind: '*:8181'
      stats:
        enable: ""
        uri: "/"
        realm: 'Haproxy Statistics'
        auth: haproxy:haproxy
  # frontend:
  #   httpfrontend:
  #     bind: '*:80'
  #     mode: 'http'
  #     option:
  #       http-server-close:
  #     default_backend: "httpfrontend"
  # backend:
  #   httpfrontend:
  #     bind: '*:80'
  #     mode: 'http'
  #     balance: 'roundrobin'
  #     option:
  #       forwardfor:
  #     reqadd: {}
  #     server: {}
  timeout:
    http-request: 10s
    queue: 1m
    connect: 10s
    client: 1m
    server: 1m
    http-keep-alive: 10s
    check: 10s
  defaults:
    mode: 'http'
    log: 'global'
    retries: 3
    option:
      httplog:
      dontlognull:
      http-server-close:
      forwardfor: except 127.0.0.0/8
      redispatch:
